The ``7-base_geometry`` module
======================

Using ``base_geometry``
------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

Usage:

name should be a string and value ALWAYS a positive integer and different than 0
>>> bg.integer_validator("an_int", 18)
>>> bg.integer_validator("width", 89)

=== Test area function, not implemented ===
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

=== Test with 0 ===
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
ValueError: width must be greater than 0

=== Test with a negative number ===
>>> bg.integer_validator("width", -1)
Traceback (most recent call last):
ValueError: width must be greater than 0

=== Test with something different than an integer ===

>>> bg.integer_validator("width", (4,))
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("name", "Dani")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer

=== Tests with no arguments ===

>>> bg.integer_validator("age")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'